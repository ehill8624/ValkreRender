{"Name":"MessageBar","Id":494,"Alias":"MessageBar-ios","Description":"Message Bar\n----\n\nSystem-wide dropdown messages/notifications for your iOS apps.\n\n###Features\n\n- Three default message types\n- Customise the message icon and background colour\n- Queue as many messages/notifications as you want\n- Supports callback when message is dismissed\n\n###Easy and Simple\n\n```\n//Show message from Shared instance, with the title and description\nMessageBarManager.SharedInstance.ShowMessage (\"Success\", \"This is success\", MessageType.Success)\n\t\n//Provide callback to execute on dismiss\nMessageBarManager.SharedInstance.ShowMessage (\"Info\", \"This is information\", MessageType.Info, \n\t\t\t\t\t() =\u003e Console.WriteLine (\"This is callback!\"))\n```\n  \n---\nMessageBar is inspired by Objective-C library TWMessageBarManager created by Terry Worona, which can be found [here](https://github.com/terryworona/TWMessageBarManager).\n","Version":"1.0","Summary":"System-wide dropdown messages for iOS","QuickStart":"##Getting Started\n\nBy default the MessageBar is accessble through `MessageBarManager.SharedInstance` from anywhere with your app. You can queue as many message as you want to display sequentially by calling `ShowMessage` method or it\u0027s overload.\n\n\n###Show messages\n\nYou can show messages by calling `ShowMessage` method.\n\n```\n//Show message from Shared instance, with the title and description\nMessageBarManager.SharedInstance.ShowMessage (\"Success\", \"This is success\", MessageType.Success)\n```\t\nShow messages with callback:\n\n```\n//Provide callback to execute on dismiss\t\nMessageBarManager.SharedInstance.ShowMessage (\"Info\", \"This is information\", MessageType.Info, \n\t\t\t\t\t\t() =\u003e Console.WriteLine (\"This is callback!\"))\n```\n\t\t\t\t\t\t\n\n###Customisation\n\nYou can customise messages by extending `MessageBarStyleSheet` class and assigning it to \n`MessageBarManager.StyleSheet`\n\nYou need to override one/more following methods to provide custom icons and colours for messages\n\n```\n//Customise background colour for message type\npublic virtual UIColor BackgroundColorForMessageType (MessageType type)\n\t\n//Customise icon for message type\npublic virtual UIImage IconImageForMessageType (MessageType type)\n\t\n//Stroke colour for message type\npublic virtual UIColor StrokeColorForMessageType (MessageType type)\n```\n\t\n","Hash":"4e295ae597c3b04b0218653c8ce73fb2","TargetPlatforms":["ios"],"TrialHash":null}